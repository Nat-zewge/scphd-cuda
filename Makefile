#############################################################################
# Makefile for building: scphd-cuda
# Generated by qmake (2.01a) (Qt 4.8.6) on: Thu Sep 18 01:03:05 2014
# Project:  scphd-cuda.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile scphd-cuda.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -g -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/opt/cuda/bin/../include/cuda/ -I/opt/cuda/include -I/opt/cuda/samples/common/inc
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro
LIBS          = $(SUBLIBS)  -L/opt/cuda/bin/../lib64 -L/opt/cuda/samples/common/lib -lcudart -lnvToolsExt 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o
OBJCOMP = dlink.o

SOURCES       = src/jsoncpp.cpp 
OBJECTS       = ${OBJECTS_DIR}main_cuda.o \
		jsoncpp.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		deployment.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		scphd-cuda.pro
QMAKE_TARGET  = scphd-cuda
DESTDIR       = 
TARGET        = scphd-cuda

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	/opt/cuda/bin/../bin/nvcc -gencode=arch=compute_30,code=sm_30 -dlink $(OBJECTS) -o dlink.o 
	
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: scphd-cuda.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		deployment.pri \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile scphd-cuda.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
deployment.pri:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug -o Makefile scphd-cuda.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/scphd-cuda1.0.0 || $(MKDIR) .tmp/scphd-cuda1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/scphd-cuda1.0.0/ && $(COPY_FILE) --parents src/main.cu .tmp/scphd-cuda1.0.0/ && (cd `dirname .tmp/scphd-cuda1.0.0` && $(TAR) scphd-cuda1.0.0.tar scphd-cuda1.0.0 && $(COMPRESS) scphd-cuda1.0.0.tar) && $(MOVE) `dirname .tmp/scphd-cuda1.0.0`/scphd-cuda1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/scphd-cuda1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_cuda_make_all: ${OBJECTS_DIR}main_cuda.o
compiler_cuda_clean:
	-$(DEL_FILE) ${OBJECTS_DIR}main_cuda.o
${OBJECTS_DIR}main_cuda.o: src/main.cu
	/opt/cuda/bin/nvcc -m64 -gencode=arch=compute_30,code=sm_30 -dc -std=c++11 --compiler-options -fno-strict-aliasing --compiler-bindir=/opt/gcc-4.8 --ptxas-options=-O2,-v -I/opt/cuda/bin/../include/cuda/ -I/opt/cuda/bin/../include/ -I/opt/cuda/samples/common/inc/ src/main.cu -o ${OBJECTS_DIR}main_cuda.o

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_cuda_clean 

####### Compile

jsoncpp.o: src/jsoncpp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jsoncpp.o src/jsoncpp.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/opt/scphd-cuda/bin/ || $(MKDIR) $(INSTALL_ROOT)/opt/scphd-cuda/bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/opt/scphd-cuda/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/opt/scphd-cuda/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/opt/scphd-cuda/bin/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

